train_input_path: "odps://pai_rec_test_dev/tables/criteo_terabyte_train_hashed_v1"
eval_input_path: "odps://pai_rec_test_dev/tables/criteo_terabyte_val_test_hashed_v1"
model_dir: "experiments/masknet_criteo_repeat_backbone"
train_config {
    sparse_optimizer {
        adagrad_optimizer {
            lr: 0.0001
        }
        constant_learning_rate {
        }
    }
    dense_optimizer {
        adam_optimizer {
            lr: 0.0001
        }
        constant_learning_rate {
        }
    }
    num_epochs: 1
    save_checkpoints_epochs: 1
}
eval_config {
}
data_config {
    batch_size: 8192
    dataset_type: OdpsDataset
    fg_encoded: true
    label_fields: "label"
    num_workers: 8
}

feature_configs {
    raw_feature {
        feature_name: "int_0"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_1"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_2"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_3"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_4"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_5"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_6"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_7"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_8"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_9"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_10"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_11"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}
feature_configs {
    raw_feature {
        feature_name: "int_12"
        embedding_dim: 16
        normalizer: "method=expression,expr=log(x+3)"
    }
}

# 类别特征配置
feature_configs {
    id_feature {
        feature_name: "cat_0"
        num_buckets: 40000000
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_1"
        num_buckets: 39060
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_2"
        num_buckets: 17295
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_3"
        num_buckets: 7424
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_4"
        num_buckets: 20265
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_5"
        num_buckets: 3
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_6"
        num_buckets: 7122
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_7"
        num_buckets: 1543
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_8"
        num_buckets: 63
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_9"
        num_buckets: 40000000
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_10"
        num_buckets: 3067956
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_11"
        num_buckets: 405282
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_12"
        num_buckets: 10
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_13"
        num_buckets: 2209
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_14"
        num_buckets: 11938
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_15"
        num_buckets: 155
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_16"
        num_buckets: 4
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_17"
        num_buckets: 976
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_18"
        num_buckets: 14
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_19"
        num_buckets: 40000000
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_20"
        num_buckets: 40000000
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_21"
        num_buckets: 40000000
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_22"
        num_buckets: 590152
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_23"
        num_buckets: 12973
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_24"
        num_buckets: 108
        embedding_dim: 16
    }
}
feature_configs {
    id_feature {
        feature_name: "cat_25"
        num_buckets: 36
        embedding_dim: 16
    }
}

model_config {
    # 特征组配置 - 包含所有特征
    feature_groups {
        group_name: "all_features"
        feature_names: "int_0"
        feature_names: "int_1"
        feature_names: "int_2"
        feature_names: "int_3"
        feature_names: "int_4"
        feature_names: "int_5"
        feature_names: "int_6"
        feature_names: "int_7"
        feature_names: "int_8"
        feature_names: "int_9"
        feature_names: "int_10"
        feature_names: "int_11"
        feature_names: "int_12"
        feature_names: "cat_0"
        feature_names: "cat_1"
        feature_names: "cat_2"
        feature_names: "cat_3"
        feature_names: "cat_4"
        feature_names: "cat_5"
        feature_names: "cat_6"
        feature_names: "cat_7"
        feature_names: "cat_8"
        feature_names: "cat_9"
        feature_names: "cat_10"
        feature_names: "cat_11"
        feature_names: "cat_12"
        feature_names: "cat_13"
        feature_names: "cat_14"
        feature_names: "cat_15"
        feature_names: "cat_16"
        feature_names: "cat_17"
        feature_names: "cat_18"
        feature_names: "cat_19"
        feature_names: "cat_20"
        feature_names: "cat_21"
        feature_names: "cat_22"
        feature_names: "cat_23"
        feature_names: "cat_24"
        feature_names: "cat_25"
        group_type: DEEP
    }

    rank_backbone {
        backbone {
            blocks {
                name: 'all_features'
                inputs {
                    feature_group_name: 'all_features'
                }
                input_layer {
                    only_output_3d_tensor: false
                }
            }
            blocks {
                name: 'repeated_mask_blocks'
                inputs {
                    block_name: 'all_features'
                    input_fn: "lambda x: [x, x]"
                }
                repeat {
                    # 重复3次MaskBlock操作，相当于3层MaskBlock
                    num_repeat: 3
                    # 输出时在最后一个维度进行拼接
                    output_concat_axis: -1
                    # 定义要重复的MaskBlock模块
                    module {
                        class_name: 'MaskBlock'
                        mask_block {
                            reduction_ratio: 3.0
                            hidden_dim: 512
                        }
                    }
                }
            }
            blocks {
                name: 'top_mlp'
                inputs {
                    block_name: 'repeated_mask_blocks'
                }
                module {
                    class_name: 'MLP'
                    mlp {
                        hidden_units: [256, 128, 64, 1]
                        activation: 'nn.ReLU'
                        dropout_ratio: [0.0, 0.0, 0.0, 0.0]
                        use_bn: false
                        bias: true
                    }
                }
            }
            concat_blocks: ['top_mlp']
        }
    }
    metrics {
        auc {}
    }
    losses {
        binary_cross_entropy {}
    }
}
