train_input_path: "data/taobao_data_train"
eval_input_path: "data/taobao_data_eval"
model_dir: "experiments/multi_tower_din_rankbackbone"

train_config {
  log_step_count_steps: 200
  # For demo only, you can remove the optimizer_config
  # and let the default AdamOptimizer be used
  optimizer_config: {
    adam_optimizer: {
      learning_rate: 0.001
    }
    use_moving_average: false
  }
  save_steps: 1000
  max_steps: 2000
}

eval_config {
  metrics_set: {
    auc {}
  }
}

data_config {
  input_fields {
    input_name:'clk'
    input_type: INT32
  }
  input_fields {
    input_name:'buy'
    input_type: INT32
  }
  input_fields {
    input_name: 'pid'
    input_type: STRING
  }
  input_fields {
    input_name: 'adgroup_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'cate_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'campaign_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'customer'
    input_type: STRING
  }
  input_fields {
    input_name: 'brand'
    input_type: STRING
  }
  input_fields {
    input_name: 'user_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'cms_segid'
    input_type: STRING
  }
  input_fields {
    input_name: 'cms_group_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'final_gender_code'
    input_type: STRING
  }
  input_fields {
    input_name: 'age_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'pvalue_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'shopping_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'occupation'
    input_type: STRING
  }
  input_fields {
    input_name: 'new_user_class_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'tag_category_list'
    input_type: STRING
  }
  input_fields {
    input_name: 'tag_brand_list'
    input_type: STRING
  }
  input_fields {
    input_name: 'price'
    input_type: INT32
  }

  label_fields: 'clk'
  batch_size: 4096
  num_epochs: 10000
  prefetch_size: 32
  input_type: ParquetInput
}

feature_config: {
  features: {
    input_names: 'pid'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'adgroup_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'cate_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10000
  }
  features: {
    input_names: 'campaign_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'customer'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'brand'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'user_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'cms_segid'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100
  }
  features: {
    input_names: 'cms_group_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100
  }
  features: {
    input_names: 'final_gender_code'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'age_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'pvalue_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'shopping_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'occupation'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'new_user_class_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'tag_category_list'
    feature_type: SequenceFeature
    separator: '^'
    hash_bucket_size: 100000
    embedding_dim: 16
    sequence_length: 50
  }
  features: {
    input_names: 'tag_brand_list'
    feature_type: SequenceFeature
    separator: '^'
    hash_bucket_size: 100000
    embedding_dim: 16
    sequence_length: 50
  }
  features: {
    input_names: 'price'
    feature_type: RawFeature
  }
}

model_config:{
  model_class: "RankModel"
  feature_groups: {
    group_name: 'user'
    feature_names: 'user_id'
    feature_names: 'cms_segid'
    feature_names: 'cms_group_id'
    feature_names: 'age_level'
    feature_names: 'pvalue_level'
    feature_names: 'shopping_level'
    feature_names: 'occupation'
    feature_names: 'new_user_class_level'
    feature_names: 'final_gender_code'
  }
  feature_groups: {
    group_name: 'item'
    feature_names: 'adgroup_id'
    feature_names: 'cate_id'
    feature_names: 'campaign_id'
    feature_names: 'customer'
    feature_names: 'brand'
    feature_names: 'price'
  }
  feature_groups: {
    group_name: 'pid'
    feature_names: 'pid'
  }
  feature_groups: {
    group_name: 'tag_category'
    feature_names: 'tag_category_list'
    sequence_features: {
      sequence_name: 'tag_category_list'
      sequence_length: 50
    }
  }
  feature_groups: {
    group_name: 'tag_brand'
    feature_names: 'tag_brand_list'
    sequence_features: {
      sequence_name: 'tag_brand_list'
      sequence_length: 50
    }
  }

  backbone {
    packages: 'tzrec.modules.backbone_module'
    blocks {
      name: 'user_mlp'
      inputs: 'user'
      input_layer: 'MLP'
      input_layer_args {
        hidden_units: [256, 128]
        activation: 'ReLU'
      }
    }
    blocks {
      name: 'item_mlp'  
      inputs: 'item'
      input_layer: 'MLP'
      input_layer_args {
        hidden_units: [256, 128]
      }
    }
    blocks {
      name: 'pid_identity'
      inputs: 'pid'
    }
    blocks {
      name: 'tag_category_din'
      inputs: 'tag_category'
      input_layer: 'DIN'
      input_layer_args {
        attn_mlp {
          hidden_units: [80, 40]
          activation: 'ReLU'
        }
        max_seq_length: 50
      }
    }
    blocks {
      name: 'tag_brand_din'
      inputs: 'tag_brand'
      input_layer: 'DIN'
      input_layer_args {
        attn_mlp {
          hidden_units: [80, 40]
          activation: 'ReLU'
        }
        max_seq_length: 50
      }
    }
    blocks {
      name: 'all_concat'
      inputs: ['user_mlp', 'item_mlp', 'pid_identity', 'tag_category_din', 'tag_brand_din']
      merge_type: 'concat'
    }
    blocks {
      name: 'final_mlp'
      inputs: 'all_concat'
      input_layer: 'MLP'
      input_layer_args {
        hidden_units: [256, 128, 64, 1]
        activation: 'ReLU'
      }
    }
    concat_blocks: ['final_mlp']
  }

  losses {
    loss_type: SIGMOID_CROSS_ENTROPY
    weight: 1.0
  }
  metrics {
    metric_type: AUC
  }
}
